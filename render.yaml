services:
  - type: web
    name: campus-frontend
    env: static
    buildCommand: cd campus_frontend && npm install && npm run build
    staticPublishPath: ./campus_frontend/dist
    envVars:
      - key: REACT_APP_ENV
        value: production
      - key: REACT_APP_API_URL
        fromService:
          type: web
          name: campus-backend
          envVarKey: RENDER_EXTERNAL_URL
      - key: REACT_APP_WS_URL
        fromService:
          type: web
          name: campus-backend
          envVarKey: RENDER_EXTERNAL_WS_URL

  - type: web
    name: campus-backend
    env: python
    buildCommand: |
      # Create necessary directories
      mkdir -p campus_backend/static campus_backend/staticfiles campus_backend/media
      
      # Install dependencies
      cd campus_backend
      pip install -r requirements.txt
      
      # Collect static files
      DJANGO_DEBUG=False \
      STATIC_ROOT=/opt/render/project/src/campus_backend/staticfiles \
      ALLOWED_HOSTS=.onrender.com \
      python manage.py collectstatic --noinput --clear
    startCommand: |
      cd campus_backend
      gunicorn campus.wsgi:application --log-file - --log-level debug
    envVars:
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_DEBUG
        value: false
      - key: ALLOWED_HOSTS
        value: ".onrender.com"
      - key: DATABASE_URL
        value: postgresql://campusdb_taa0_user:m6BDSO4NhdUAes31CVvinPUWHREXBgPg@dpg-cvooah6mcj7s7388u6tg-a/campusdb_taa0
      - key: RENDER_EXTERNAL_URL
        sync: false
      - key: RENDER_EXTERNAL_WS_URL
        sync: false
      - key: PYTHONPATH
        value: /opt/render/project/src/campus_backend
      - key: STATIC_ROOT
        value: /opt/render/project/src/campus_backend/staticfiles 